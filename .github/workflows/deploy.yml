name: Deploy to InfinityFree

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, curl, zip, gd, iconv, pdo, pdo_mysql
        tools: composer

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader
      # --prefer-dist: Descarga zips en lugar de clonar repos (m치s r치pido)
      # --no-progress: Menos output en logs
      # --no-dev: No instala paquetes de desarrollo (importante para producci칩n)
      # --optimize-autoloader: Optimiza el autoloader de Composer

    - name: Install NPM Dependencies
      run: npm install

    - name: Build Assets (Vite/Mix)
      run: npm run build
        
    - name: Generate .env file for production
      run: |
        cp .env.example .env
        echo "APP_NAME=Laravel" >> .env
        echo "APP_ENV=production" >> .env
        echo "APP_KEY=${{ secrets.PROD_APP_KEY }}" >> .env
        echo "APP_DEBUG=false" >> .env
        echo "APP_URL=${{ secrets.PROD_APP_URL }}" >> .env

        echo "LOG_CHANNEL=stack" >> .env
        echo "LOG_DEPRECATIONS_CHANNEL=null" >> .env
        echo "LOG_LEVEL=error" >> .env

        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=${{ secrets.PROD_DB_HOST }}" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=${{ secrets.PROD_DB_DATABASE }}" >> .env
        echo "DB_USERNAME=${{ secrets.PROD_DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}" >> .env

    # Opcional pero recomendado para rendimiento (si no causa problemas)
    # - name: Cache Laravel configurations
    #   run: |
    #     php artisan config:cache
    #     php artisan route:cache
    #     php artisan view:cache
    # Nota: Si tienes rutas con Closures, route:cache fallar치.
    # Nota: A veces config:cache puede dar problemas en shared hosting si las rutas no coinciden exactamente. Prueba sin esto primero.

    - name: Deploy to FTP server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./
        server-dir: /htdocs/

        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **.env
          # .github/**
          # storage/logs/**
          # storage/framework/sessions/**
          # storage/framework/cache/**
          # storage/framework/views/**

        timeout: 600000 